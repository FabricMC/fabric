archivesBaseName = "fabric-data-fixer-api-v1"
version = getSubprojectVersion(project)

moduleDependencies(project, [
		'fabric-api-base',
		'fabric-lifecycle-events-v1'
])

testDependencies(project, [
		':fabric-biome-api-v1',
		':fabric-item-api-v1',
		':fabric-object-builder-api-v1'
])

loom {
	accessWidenerPath = file('src/main/resources/fabric-data-fixer-api-v1.accesswidener')

	runs {
		genOldSave {
			inherit testmodServer
			name "Generate old save"
			vmArg "-Dfabric.dataFixerTestMod.genMode=true"

			ideConfigGenerated = true
		}
	}
}

spotless {
	java {
		/**
		 * This module contains a code from QSL, and they need a separate license header.
		 * Code ported from QSL should be marked as "From QSL" in a comment,
		 * inside the "source" (i.e. not inside header comment).
		 */
		licenseHeaderFile(project.file("HEADER-PORT")).named('port').onlyIfContentMatches('.*From QSL.*')
	}
}
